---
title: "a2_task2_ingman_gabriel"
author: "Gabriel Ingman"
format: 
  html:
    code-fold: show
    toc: true
    number-sections: false
    embed-resources: true
editor: visual
theme: quartz
execute:
  echo: true
  message: false
  warning: false
---

```{r setup}

library(tidyverse)
library(tidytext)
library(pdftools)
library(ggwordcloud)
library(here)

```

# Assignment 2, Task 2

![**Hyperion**](data/hyperion_cover.jpg){fig-align="center"}

## Overview and Data Summary

This task is an exercise in text analysis. We were instructed to find our own text from the internet, analyse the entire text for its most common words (excluding stop words), and then perform a sentiment analysis.

The data for this task comes from Dan Simmon's 1989 novel *Hyperion*. This is one of my favorite science fiction novels. It's one of the most vivid and imaginative science fiction novels of all time, and yet, it's also one of the most brilliant adaptations of Chaucer's *The Canterbury Tales* ever written. Warning: this book is twisted. It covers with a wide range of topics: war, religion, zealotry, technology, aristocracy, time travel, and colonialism. It was also written in the eighties.

```{r textsetup}

hyperion_text <- pdftools::pdf_text(here('data', 'hyperion.pdf'))

```

```{r textdataframe}

hyperion_lines <- data.frame(hyperion_text) %>% 
  mutate(page = 1:n()) %>%
  mutate(text_full = str_split(hyperion_text, pattern = '\\n')) %>% 
  unnest(text_full) %>% 
  mutate(text_full = str_trim(text_full)) 

# Followed along with the code from the lab to turn my book into a dataframe.

```

```{r datacleaning}

hyperion_booktext <- hyperion_lines %>% 
  filter(between(page, 10, 552))

hyperion_capital <- hyperion_booktext %>%
  filter(text_full != "") %>% #Filtered out empty lines.
  mutate(headings = str_detect(text_full, "EPILOGUE|PROLOGUE|TALE:|^[0-9]$")) #Detected the unique strings and number headings that signified either a chapter of the book or the stories nested within them.

```

```{r chapters}


hyperion_chapters <- hyperion_capital %>% 
  mutate(chapter= ifelse(headings == TRUE, text_full, NA)) %>% 
  fill(chapter, .direction = 'down') %>% 
  mutate(chapter = fct_inorder(chapter))
  
```
